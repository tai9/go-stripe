{{template "base" .}}

{{define "title"}}
    Virtual Terminal
{{end}}

{{define "content"}}
    <h2 class="mt-3 text-center">Virtual Terminal</h2>
    <hr />

    <div class="alert alert-danger text-center d-none" id="card-message"></div>
    <form action="/payment-succeeded" method="POST"
        name="charge_form" id="charge_form"
        class="d-block needs-validation charge-form"
        autocomplete="off" novalidate=""
        >

        <div class="mb-3">
            <label for="amount" class="form-label">Amount</label>
            <input type="text"  class="form-control" id="amount" name="amount"
                required="" autocomplete="amount-new"
             />
        </div>

        <div class="mb-3">
            <label for="cardholder-name" class="form-label">CardHolder Name</label>
            <input type="text"  class="form-control" id="cardholder-name" name="cardholder-name"
                required="" autocomplete="cardholder-name-new"
             />
        </div>

        <div class="mb-3">
            <label for="cardholder-email" class="form-label">CardHolder Email</label>
            <input type="text" class="form-control" id="cardholder-email" name="cardholder-email"
                required="" autocomplete="cardholder-email-new"
             />
        </div>

        <!-- card number will be built by stripe  -->
        <div class="mb-3">
            <label for="card-element" class="form-label">Credit Card</label>
            <div id="card-element" class="form-control"></div>
            <div class="alert-danger text-center" id="card-errors" role="alert"></div>
            <div class="alert-success text-center" id="card-success" role="alert"></div>
        </div>

        <hr />

        <a id="pay-button" href="javascript:void(0)" class="btn btn-primary" onclick="val()" >Charge Card</a>
        <div id="processing-payment" class="text-center d-none">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>

        <input type="hidden" id="payment_intent" name="payment_intent" />
        <input type="hidden" id="payment_method" name="payment_method" />
        <input type="hidden" id="payment_amount" name="payment_amount" />
        <input type="hidden" id="payment_currency" name="payment_currency" />

    </form>
{{end}}

{{define "js"}}
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        let card;
        let stripe;
        const cardMessage = document.getElementById("card-message")
        const payButton = document.getElementById("pay-button")
        const processing = document.getElementById("processing-payment")

        stripe = Stripe({{.API}})

        function hidePayButton(){
            payButton.classList.add("d-none")
            processing.classList.remove("d-none")
        }

        function showPayButtons(){
            payButton.classList.remove("d-none")
            processing.classList.add("d-none")
        }

        function showCardError(msg){
            processing.classList.add("alert-danger")
            cardMessage.classList.remove("alert-success")
            cardMessage.classList.remove("d-none")
            cardMessage.innerText = msg
        }

        function showCardSuccess(msg){
            processing.classList.remove("alert-danger")
            cardMessage.classList.add("alert-success")
            cardMessage.classList.remove("d-none")
            cardMessage.innerText = "Transaction successful"
        }

        function val(){
            const form = document.getElementById("charge_form")
            if(form.checkValidity() === false){
                this.event.preventDefault();
                this.event.stopPropagation();
                form.classList.add("was-validated")
                return
            }
            form.classList.add("was-validated")
            hidePayButton()


            let amountToCharge = String(parseFloat(document.getElementById("amount").value) *100)

            let payload = {
                amount: amountToCharge,
                currency: 'cad'
            }

            const requestOptions = {
                method: 'post',
                header:{
                    'Accept':'application/json',
                    'Content-Type':'application/json',
                },
                body: JSON.stringify(payload)
            }

            fetch("{{index .StringMap "publishable_key"}}", requestOptions)
                .then(response => response.text())
                .then(response =>{
                    let data;
                    try{
                        data = JSON.parse(response)
                        console.log(data)
                        stripe.confirmCardPayment(data.client_secret,
                            {payment_method:{
                                card: card,
                                billing_details: {
                                    name: document.getElementById("cardholder-name").value,
                                },}
                        }).then(result =>{
                        console.log(result.error)
                            if(result.error){
                                // card declined or something went wrong with the card
                                showCardError(result.error.message);
                                showPayButtons();
                            }else if(result.paymentIntent){
                                if(result.paymentIntent.status === 'succeeded'){
                                    // we have charged the card
                                    document.getElementById("payment_method").value = result.paymentIntent.payment_method_types[0]
                                    document.getElementById("payment_intent").value = result.paymentIntent.id
                                    document.getElementById("payment_amount").value = result.paymentIntent.amount
                                    document.getElementById("payment_currency").value = result.paymentIntent.currency
                                    processing.classList.add("d-none")
                                    showCardSuccess()
                                    document.getElementById("charge_form").submit()
                                }
                            }
                        })
                    }catch(err){
                        console.log(err)
                        showCardError("Invalid response from payment gateway!")
                        showPayButtons()
                    }
                })
        }

        (function(){
            // create stripe and elements
            const elements = stripe.elements()
            const style = {
                base: {
                    fontSize: '16px',
                    lineHeight: '24px'
                }
            }

            // create card entry
            card = elements.create('card',{
                style: style,
                hidePostalCode: true
            })
            card.mount("#card-element")

            //check for input errors
            card.addEventListener('change', function(event){
                var dissplayError = document.getElementById("card-errors")
                if(event.error){
                    dissplayError.classList.remove('d-none')
                    dissplayError.textContent = event.error.message
                }else{
                    dissplayError.classList.add('d-none')
                    dissplayError.textContent = ''
                }
            })
        })()

    </script>
{{end}}
